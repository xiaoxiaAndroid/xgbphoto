apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "maven-publish"
android {
    namespace 'com.sky.photo'
    compileSdk 34

    signingConfigs {
        release {
            storeFile file('userphoto.jks')
//            storeFile file('ldx.jks')
            storePassword '123456'
            keyAlias = 'photo'
            keyPassword '123456'
        }
    }

    defaultConfig {
        applicationId "com.sky.photo"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

ext {
    PUBLISH_ARTIFACT_ID = "same"
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    api project(':selector')
    api project(':compress')
    api project(':ucrop')
    api project(":camerax")
    api project(":ijkplayer-java")
}

project.afterEvaluate {
    publishing {
        def versionName = "0.0.1" // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
        publications {
//            release(MavenPublication) {
            // Applies the component for the release build variant.
//                from components.release // 表示发布 release（jitpack 都不会使用到）
            // You can then customize attributes of the publication as shown below.
//                groupId = 'com.yalantis.ucrop' // 这个是依赖库的组 id
//                artifactId = 'ucrop' // 依赖库的名称（jitpack 都不会使用到）
//                version = versionName
//                artifact(sourcesJar)
//                // 指定生成的aar路径
//                artifact "$buildDir/outputs/aar/${project.name}-crop.aar"
            // pom文件中声明依赖，从而传递到使用方

            release(MavenPublication) {
                from components.findByName('release')
                groupId = 'com.sky.photo' // 这个是依赖库的组 id
                artifactId = 'same' // 依赖库的名称（jitpack 都不会使用到）
                version = versionName
            }

//            mavenJava(MavenPublication) {
//                // 这里头是artifacts的配置信息，不填会采用默认的
//                groupId = 'com.yalantis.ucrop' // 这个是依赖库的组 id
//                artifactId = 'ucrop' // 依赖库的名称（jitpack 都不会使用到）
//                version = versionName
////                from components.java
//            }

//            aar(MavenPublication) {
//                groupId = 'com.yalantis.ucrop' // 这个是依赖库的组 id
//                artifactId = 'ucrop' // 依赖库的名称（jitpack 都不会使用到）
//                version = versionName
//                // Tell maven to prepare the generated "*.aar" file for publishing
//                if (isAndroidProject) {
//                    artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
//                } else {
//                    artifact("$buildDir/libs/${project.getName()}.jar")
//                }
//                    artifact javadocsJar
//                artifact sourcesJar
//            }

        }
//        }
        repositories {
            // 下面这部分，不是很清楚加不加，但是最后加上
            maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                def baseUrl = buildDir.getParent()
                def releasesRepoUrl = "$baseUrl/repos/releases"
                def snapshotsRepoUrl = "$baseUrl/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}
