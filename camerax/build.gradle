plugins {
    id 'com.android.library'
    id 'maven-publish'
}
//tasks.register('generateSourcesJar', Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier 'sources'
//}
android {
    compileSdk 34
    namespace 'com.luck.lib.camerax'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

ext {
    PUBLISH_ARTIFACT_ID = "camerax"
}

dependencies {
    def camerax_version = "1.2.1"
    api "androidx.camera:camera-core:${camerax_version}"
    api "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.appcompat:appcompat:${cfgs.version_appcompat}"
    implementation "androidx.transition:transition:${cfgs.transition}"
    implementation "androidx.concurrent:concurrent-futures:${cfgs.futures}"
}

afterEvaluate {
    publishing {
        def versionName = "0.0.1" // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
        publications {
            release(MavenPublication) {
                // Applies the component for the release build variant.
//                from components.release // 表示发布 release（jitpack 都不会使用到）
                // You can then customize attributes of the publication as shown below.
                groupId = 'com.luck.lib.camerax' // 这个是依赖库的组 id
                artifactId = 'camerax' // 依赖库的名称（jitpack 都不会使用到）
                version = versionName
            }
        }
        repositories {
            // 下面这部分，不是很清楚加不加，但是最后加上
            maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                def baseUrl = buildDir.getParent()
                def releasesRepoUrl = "$baseUrl/repos/releases"
                def snapshotsRepoUrl = "$baseUrl/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

//apply from: '../publish.gradle'
//、、


